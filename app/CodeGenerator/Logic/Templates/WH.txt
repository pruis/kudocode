using Autofac;
using AutoMapper;
using KudoCode.Contracts.Api;
using KudoCode.LogicLayer.Dtos;

namespace KudoCode.<%service%>Service.Domain
{
    public class <%request%><%entity%>WorkerHandler : CommandHandler<<%request%><%entity%>Request,
        <%entity%>, <%response%>>
    {
        public <%request%><%entity%>WorkerHandler(
            IMapper mapper,
            IRepository repository,
            ILifetimeScope scope,
            IWorkerContext<<%response%>> context)
            : base(mapper, repository, scope, context)
        {
        }

        protected override void GetEntity()
        {
            Entity = Request.Id > 0
                ? Repository.GetOne<<%entity%>>(a => a.Id == Request.Id)
                : new <%entity%>();
        }

        protected override void ValidateEntity()
        {
            if (Entity == null)
                Context.AddMessage("E4", $"Entity {nameof(<%entity%>)} with ID {Request.Id}");
        }

        protected override void Execute()
        {
            Mapper.Map(Request,Entity);
            Repository.Save(Entity).SaveChanges();

            Context.Result = new <%request%><%entity%>Response();
            Context.Result.Id = Entity.Id;
        }
    }
}